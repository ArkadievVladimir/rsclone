[{"D:\\rsclone\\rsclone\\twitter-front\\src\\index.tsx":"1","D:\\rsclone\\rsclone\\twitter-front\\src\\theme.ts":"2","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\store.ts":"3","D:\\rsclone\\rsclone\\twitter-front\\src\\App.tsx":"4","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\saga.ts":"5","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\RootReducer.ts":"6","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\types.ts":"7","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\selectors.ts":"8","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\actionCreators.ts":"9","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Home\\theme.tsx":"10","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Home\\Home.tsx":"11","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\reducer.ts":"12","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\sagas.ts":"13","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\reducer.ts":"14","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\reducer.ts":"15","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\reducer.ts":"16","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Signin\\index.tsx":"17","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\actionCreators.ts":"18","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\actionCreators.ts":"19","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\contracts\\actionTypes.ts":"20","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\BackButton.tsx":"21","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\Tweet.tsx":"22","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Home\\components\\FullTweet.tsx":"23","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\contracts\\actionTypes.ts":"24","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\contracts\\actionTypes.ts":"25","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\contracts\\state.ts":"26","D:\\rsclone\\rsclone\\twitter-front\\src\\services\\api\\authApi.tsx":"27","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\selectors.ts":"28","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\selectors.ts":"29","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\actionCreators.ts":"30","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\ImageList.tsx":"31","D:\\rsclone\\rsclone\\twitter-front\\src\\core\\axios.ts":"32","D:\\rsclone\\rsclone\\twitter-front\\src\\utils\\formatDate.ts":"33","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Signin\\components\\RegisterModal.tsx":"34","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Signin\\components\\LoginModal.tsx":"35","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\AddTweetForm.tsx":"36","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\sagas.ts":"37","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\sagas.ts":"38","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\sagas.ts":"39","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\HashTags.tsx":"40","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\Sidebar.tsx":"41","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\SearchTextField.tsx":"42","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\ModalBlock.tsx":"43","D:\\rsclone\\rsclone\\twitter-front\\src\\utils\\uploadImage.ts":"44","D:\\rsclone\\rsclone\\twitter-front\\src\\services\\api\\tweetsApi.ts":"45","D:\\rsclone\\rsclone\\twitter-front\\src\\services\\api\\TagsApi.ts":"46","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\UploadImages.tsx":"47","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\selectors.ts":"48","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Layout.tsx":"49","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\ActivatePage.tsx":"50","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\User\\index.tsx":"51","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\UserSideProfile.tsx":"52"},{"size":574,"mtime":1610972712640,"results":"53","hashOfConfig":"54"},{"size":2816,"mtime":1610968506796,"results":"55","hashOfConfig":"54"},{"size":979,"mtime":1610972712653,"results":"56","hashOfConfig":"54"},{"size":1881,"mtime":1610972712634,"results":"57","hashOfConfig":"54"},{"size":358,"mtime":1610972712653,"results":"58","hashOfConfig":"54"},{"size":402,"mtime":1610972712646,"results":"59","hashOfConfig":"54"},{"size":151,"mtime":1610972712653,"results":"60","hashOfConfig":"54"},{"size":756,"mtime":1610972712653,"results":"61","hashOfConfig":"54"},{"size":1454,"mtime":1610972712651,"results":"62","hashOfConfig":"54"},{"size":8395,"mtime":1611304188350,"results":"63","hashOfConfig":"54"},{"size":2891,"mtime":1610972712641,"results":"64","hashOfConfig":"54"},{"size":943,"mtime":1610972712652,"results":"65","hashOfConfig":"54"},{"size":1721,"mtime":1610972712652,"results":"66","hashOfConfig":"54"},{"size":914,"mtime":1610972712647,"results":"67","hashOfConfig":"54"},{"size":1959,"mtime":1611304328176,"results":"68","hashOfConfig":"54"},{"size":991,"mtime":1610972712649,"results":"69","hashOfConfig":"54"},{"size":5165,"mtime":1610972712644,"results":"70","hashOfConfig":"54"},{"size":1289,"mtime":1610972712646,"results":"71","hashOfConfig":"54"},{"size":2036,"mtime":1611299238733,"results":"72","hashOfConfig":"54"},{"size":1428,"mtime":1610972712651,"results":"73","hashOfConfig":"54"},{"size":547,"mtime":1610968506784,"results":"74","hashOfConfig":"54"},{"size":7321,"mtime":1611304188294,"results":"75","hashOfConfig":"54"},{"size":3578,"mtime":1611304188339,"results":"76","hashOfConfig":"54"},{"size":774,"mtime":1610968506792,"results":"77","hashOfConfig":"54"},{"size":2287,"mtime":1611299238734,"results":"78","hashOfConfig":"54"},{"size":448,"mtime":1610972712650,"results":"79","hashOfConfig":"54"},{"size":1419,"mtime":1610972712645,"results":"80","hashOfConfig":"54"},{"size":801,"mtime":1610972712651,"results":"81","hashOfConfig":"54"},{"size":714,"mtime":1610968506793,"results":"82","hashOfConfig":"54"},{"size":864,"mtime":1610972712648,"results":"83","hashOfConfig":"54"},{"size":989,"mtime":1611304188270,"results":"84","hashOfConfig":"54"},{"size":179,"mtime":1610968506786,"results":"85","hashOfConfig":"54"},{"size":230,"mtime":1610968506796,"results":"86","hashOfConfig":"54"},{"size":8246,"mtime":1610972712644,"results":"87","hashOfConfig":"54"},{"size":5046,"mtime":1611220489260,"results":"88","hashOfConfig":"54"},{"size":4334,"mtime":1611304188269,"results":"89","hashOfConfig":"54"},{"size":807,"mtime":1610968506793,"results":"90","hashOfConfig":"54"},{"size":580,"mtime":1610972712647,"results":"91","hashOfConfig":"54"},{"size":2096,"mtime":1611304188351,"results":"92","hashOfConfig":"54"},{"size":1573,"mtime":1610972712636,"results":"93","hashOfConfig":"54"},{"size":5710,"mtime":1611304188271,"results":"94","hashOfConfig":"54"},{"size":912,"mtime":1610972712638,"results":"95","hashOfConfig":"54"},{"size":1446,"mtime":1611299238639,"results":"96","hashOfConfig":"54"},{"size":487,"mtime":1610968506796,"results":"97","hashOfConfig":"54"},{"size":1194,"mtime":1611299238732,"results":"98","hashOfConfig":"54"},{"size":242,"mtime":1610968506790,"results":"99","hashOfConfig":"54"},{"size":2322,"mtime":1611304188318,"results":"100","hashOfConfig":"54"},{"size":697,"mtime":1610968506792,"results":"101","hashOfConfig":"54"},{"size":1429,"mtime":1610972712643,"results":"102","hashOfConfig":"54"},{"size":754,"mtime":1610972712641,"results":"103","hashOfConfig":"54"},{"size":3931,"mtime":1610972712645,"results":"104","hashOfConfig":"54"},{"size":2013,"mtime":1610972712639,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"qiikh",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"108"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"108"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"D:\\rsclone\\rsclone\\twitter-front\\src\\index.tsx",[],["221","222"],"D:\\rsclone\\rsclone\\twitter-front\\src\\theme.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\store.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\App.tsx",["223"],"import React from 'react';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { Home } from './pages/Home/Home';\nimport { Layout } from './pages/Layout';\nimport { SignIn } from './pages/Signin';\nimport { UserPage } from './pages/User';\nimport { fetchUserData } from './store/ducks/user/actionCreators';\nimport { selectIsAuth, selectUserStatus } from './store/ducks/user/selectors';\nimport { LoadingStatus } from './store/types';\nimport { useHomeStyles } from './pages/Home/theme';\nimport { ActivatePage } from './pages/ActivatePage';\nimport { UserSideProfile } from './components/UserSideProfile';\n\nfunction App() {\n  const classes = useHomeStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isAuth = useSelector(selectIsAuth);\n  const loadingStatus = useSelector(selectUserStatus);\n  const isReady = loadingStatus !== LoadingStatus.NEVER && loadingStatus !== LoadingStatus.LOADING;\n \n  React.useEffect(() => {\n    dispatch(fetchUserData());\n  },[dispatch]);\n\n  React.useEffect(() => {\n    if(!isAuth && isReady) {\n      history.push('/signin');\n    } else {\n      history.push('/home');\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[isAuth, isReady]);\n\n  if(!isReady) {\n    return (\n      <div className={classes.centered}>\n        <TwitterIcon color='primary' style={{ width: 80, height: 80 }}/>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/signin\" component={SignIn} />\n        <Layout>\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/user/:id\" component={UserPage} />\n          <Route path=\"/user/activate/:hash\" component={ActivatePage} />\n        </Layout>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\saga.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\RootReducer.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\types.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\selectors.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\actionCreators.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Home\\theme.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Home\\Home.tsx",["224","225"],"import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport { AddTweetForm } from '../../components/AddTweetForm';\nimport { useHomeStyles } from './theme';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsTweetsLoading, selectTweetsItems } from '../../store/ducks/tweets/selectors';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { BackButton } from '../../components/BackButton';\nimport { FullTweet } from './components/FullTweet';\nimport { fetchTweets } from '../../store/ducks/tweets/actionCreators';\nimport { fetchTags } from '../../store/ducks/tags/actionCreators';\nimport { Tweet } from '../../components/Tweet';\nimport { Sidebar } from '../../components/Sidebar';\nimport { UserSideProfile } from '../../components/UserSideProfile';\n\n\nexport const Home = (): React.ReactElement => {\n    const classes = useHomeStyles();\n    const dispatch = useDispatch();\n    const tweets = useSelector(selectTweetsItems);\n    const isLoading = useSelector(selectIsTweetsLoading);\n\n    useEffect(() => {\n        dispatch(fetchTweets());\n        dispatch(fetchTags());\n    }, [dispatch]);\n\n    return (\n            <Paper className={classes.tweetsWrapper} variant=\"outlined\">\n                <Paper className={classes.tweetsHeader} variant=\"outlined\" >\n                <Route path='/home/:any'>\n                    <BackButton />\n                </Route>\n                \n                <Route path={['/home', '/home/search']} exact>\n                    <Typography variant=\"h6\">Твиты</Typography>  \n                </Route>\n\n                <Route path='/home/tweet' >\n                    <Typography variant=\"h6\">Твитнуть</Typography>  \n                </Route> \n                </Paper>\n\n                <Route path={['/home', '/home/search']} exact >\n                <Paper>\n                    <div className={classes.addForm}>\n                        <AddTweetForm classes={classes} />\n                    </div>\n                    <div className={classes.addFormBottomLine}></div>\n                </Paper>\n                </Route>\n\n                <Route path=\"/home\" exact>\n                    {isLoading ? (\n                        <div className={classes.tweetsWrapper}>\n                            <CircularProgress />\n                        </div>\n                    ) : (\n                        tweets.map((tweet) => \n                        <Tweet\n                        key={tweet._id}\n                        classes={classes}\n                        images={tweet.images}\n                        {...tweet}\n                        />)\n                    )}\n                </Route>\n\n                <Route path=\"/home/tweet/:id\" component={FullTweet} exact />\n                \n            </Paper>\n    );\n};\n","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\reducer.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\sagas.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\reducer.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\reducer.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\reducer.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Signin\\index.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\actionCreators.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\actionCreators.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\contracts\\actionTypes.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\components\\BackButton.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\components\\Tweet.tsx",["226","227","228","229","230","231","232","233","234","235","236","237"],"import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport RepeatOutlinedIcon from '@material-ui/icons/RepeatOutlined';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport ReplyOutlinedIcon from '@material-ui/icons/ReplyOutlined';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport { Avatar, Button, IconButton, makeStyles, Menu, MenuItem, Paper, TextareaAutosize, Theme, Typography, } from '@material-ui/core';\nimport { tweetImageListStyles, useHomeStyles } from '../pages/Home/theme';\nimport { useHistory } from 'react-router-dom';\nimport { formatDate } from '../utils/formatDate';\nimport { useDispatch } from 'react-redux';\n// import { eventChannel } from 'redux-saga';\nimport { User } from '../store/ducks/user/contracts/state';\nimport { ImageList } from './ImageList';\nimport { EditTweet, fetchEditTweet, removeTweet, setAddFormState } from '../store/ducks/tweets/actionCreators';\nimport { eventChannel } from 'redux-saga';\nimport { AddTweetForm, ImageObj } from './AddTweetForm';\nimport { ModalBlock } from './ModalBlock';\nimport { CircularProgress } from '@material-ui/core';\nimport { AddFormState } from '../store/ducks/tweets/contracts/state';\nimport { uploadImage } from '../utils/uploadImage';\nimport { UploadImages } from './UploadImages';\nimport axios from 'axios';\n\n\n\ninterface TweetProps {\n    _id: string;\n    text: string;\n    images?: string[];\n    classes: ReturnType<typeof useHomeStyles>;\n    createdAt: string;\n    user: Pick<User, '_id' | 'fullname' | 'username'>;\n}\n\nexport const Tweet: React.FC<TweetProps> = ({ \n    _id, \n    text, \n    user, \n    classes,\n    images,\n    createdAt,\n}: TweetProps): React.ReactElement => {\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const [visibility, setVisibility] = useState<boolean>(false)\n    const [tweetText, setTweetText] = useState<string>(text)\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const handleClickTweet = (event: React.MouseEvent<HTMLAnchorElement>): void => {\n        event.preventDefault();\n        history.push(`/home/tweet/${_id}`);\n    }\n    \n    const imageClasses = tweetImageListStyles()\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        event.stopPropagation();\n        event.preventDefault();\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setVisibility(false)\n        \n    };\n\n    const handleRemove = (event: React.MouseEvent<HTMLElement>): void => {\n        event.stopPropagation();\n        event.preventDefault();\n        if (window.confirm(\"Вы действительно хотите удалить?\")) {\n            dispatch(removeTweet(_id))\n        }\n    }\n\n    const handleEdit = (event: React.MouseEvent<HTMLElement>): void => {\n        event.stopPropagation();\n        event.preventDefault();\n        setVisibility(true)\n    }\n\n    const handlerAddEditedTweetOnClick = (): void => {\n        dispatch(fetchEditTweet({text: tweetText, id: _id}))\n        setTweetText(''); \n        handleClose()\n    };\n    const handlerChangeTextarea = (e: React.FormEvent<HTMLTextAreaElement>): void => {\n        if (e.currentTarget && e.currentTarget.value.length <= 288) {\n            setTweetText(e.currentTarget.value);\n        };\n    };\n    const preventClick = (e: React.FormEvent<HTMLTextAreaElement>): void => {\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    return (\n        <a onClick={handleClickTweet} className={classes.tweetWrapper} href={`/home/tweet/${_id}`}>\n        \n        <ModalBlock title='' visible={visibility} onClose={handleClose}>\n            <div className={classes.addFormTextAreaEditor}>\n                <TextareaAutosize\n                    onClick={preventClick}\n                    onChange={handlerChangeTextarea}\n                    rowsMax={15}\n                    value={tweetText}\n                    className={classes.addFormTextArea}\n                    placeholder=\"Отредактируйте твит\"\n                /> \n            </div>\n            <Button  color=\"primary\" variant=\"contained\"\n                    onClick={handlerAddEditedTweetOnClick} > { 'Сохранить' }\n            </Button>\n        </ModalBlock>\n\n        <Paper className={classNames(classes.tweet, classes.tweetsHeader)} variant=\"outlined\" >\n             <Avatar \n                alt=\"Ava\"\n                className={classes.tweetAvatar}\n                // src={user.avatarUrl} \n                />\n        <div className={classes.tweeetContent}>\n            <div className={classes.tweetHeader}>\n                <div>\n                    <b>{user.fullname}</b>&nbsp;\n                    <span className={classes.tweetsUserName}>@{user.username}</span>&nbsp;\n                    <span className={classes.tweetsUserName}> · </span>&nbsp;\n                    <span className={classes.tweetsUserName}>{formatDate(new Date(createdAt))}</span>\n                </div>\n                <div>\n                    <IconButton\n                        aria-label=\"more\"\n                        aria-controls=\"long-menu\"\n                        aria-haspopup=\"true\"\n                        onClick={handleClick}\n                    >\n                        <MoreVertIcon />\n                    </IconButton>\n                    <Menu\n                        id=\"long-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={open}\n                        onClose={handleClose}\n                    >\n                        <MenuItem onClick={handleEdit}>\n                           Редактировать\n                        </MenuItem>\n                        <MenuItem onClick={handleRemove}>\n                           Удалить твит\n                        </MenuItem>\n                    </Menu>\n                </div>\n            </div>\n            <Typography variant=\"body1\" gutterBottom>\n                {text}\n                {images && <ImageList classes={imageClasses} images={images}/>}\n            </Typography>\n            <div className={classes.tweetFooter}>\n                <div>\n                    <IconButton color=\"primary\">\n                        <ChatBubbleOutlineOutlinedIcon style={{fontSize: 16}} />\n                    </IconButton>\n                    <span style={{fontSize: 14}}>1</span>\n                </div>\n                <div>\n                    <IconButton color=\"primary\">\n                        <RepeatOutlinedIcon style={{fontSize: 16}} />\n                    </IconButton>\n\n                </div>\n                <div>\n                    <IconButton color=\"primary\">\n                        <FavoriteBorderOutlinedIcon style={{fontSize: 16}} /> \n                    </IconButton>                                  \n                </div>\n                <div>\n                    <IconButton color=\"primary\">\n                        <ReplyOutlinedIcon style={{fontSize: 16}}/> \n                    </IconButton>                                   \n                </div>\n            </div> \n        </div> \n    </Paper>\n    </a>\n    );\n};\n","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Home\\components\\FullTweet.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\contracts\\actionTypes.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\contracts\\actionTypes.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\contracts\\state.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\services\\api\\authApi.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\selectors.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\selectors.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\actionCreators.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\components\\ImageList.tsx",["238"],"import React from 'react';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useHomeStyles } from '../pages/Home/theme';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\ninterface ImageListProps {\r\n    images: string[];\r\n    classes: any;\r\n    removeImage?: (url: string) => void;\r\n}\r\n\r\nexport const ImageList: React.FC<ImageListProps> = ({ classes, images, removeImage }) => {\r\n    if (!images.length) {\r\n        return null\r\n    }\r\n    console.log(classes.imagesList)\r\n    return (\r\n        <div className={classes.imagesList}>\r\n        {images.map((url) => (\r\n            <div className={classes.imagesListItem}>\r\n                {removeImage && (\r\n                <IconButton\r\n                 onClick={(): void => removeImage(url)} \r\n                 className={classes.imagesListItemRemove}>\r\n                <ClearIcon  style={{fontSize: 15}} />\r\n                </IconButton>\r\n                )}\r\n                <img key={url} src={url} alt=''/>\r\n            </div> \r\n        ))}\r\n    </div>\r\n    )\r\n}\r\n","D:\\rsclone\\rsclone\\twitter-front\\src\\core\\axios.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\utils\\formatDate.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Signin\\components\\RegisterModal.tsx",["239"],"import Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport { useStylesSignIn } from '..';\r\nimport { ModalBlock } from '../../../components/ModalBlock';\r\nimport { Color } from '@material-ui/lab';\r\nimport { fetchSignUp } from '../../../store/ducks/user/actionCreators';\r\nimport { selectUserStatus } from '../../../store/ducks/user/selectors';\r\nimport { LoadingStatus } from '../../../store/types';\r\n\r\n\r\ninterface RegisterModalProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\nexport interface RegisterFormProps {\r\n    email: string;\r\n    fullname: string;\r\n    username: string;\r\n    password: string;\r\n    password2: string;\r\n}\r\n\r\nconst RegisterFormSchema = yup.object().shape({\r\n    email: yup.string().email(\"Неверно введена почта\").required(\"Введите почту\"),\r\n    username: yup.string().required(\"Введите логин\"),\r\n    fullname: yup.string().required(\"Введите полное имя\"),\r\n    password: yup.string().min(6, \"Минимальная длина пароля 6 символов\").required(\"Введите пароль\"),\r\n    password2: yup.string().oneOf([yup.ref('password')], 'Пароль не совпадает'),\r\n  });\r\n\r\n\r\nexport const RegisterModal: React.FC<RegisterModalProps> = ({ open, onClose }): React.ReactElement => {\r\n    const dispatch = useDispatch();\r\n    const loadingStatus = useSelector(selectUserStatus);\r\n    const openNotificationRef = React.useRef<(text: string, type: Color) => void>(() => {});\r\n    const classes = useStylesSignIn();\r\n    const { control, handleSubmit, errors } = useForm<RegisterFormProps>({\r\n        resolver: yupResolver(RegisterFormSchema)\r\n      });\r\n    const onSubmit = async (data: RegisterFormProps) => {\r\n        dispatch(fetchSignUp(data))\r\n\r\n    }\r\n\r\n    React.useEffect( () => {\r\n        if (loadingStatus === LoadingStatus.SUCCESS){\r\n            openNotificationRef.current('Регистрация успешно завершена', 'success');\r\n            onClose();\r\n        } else if (loadingStatus === LoadingStatus.ERROR) {\r\n            openNotificationRef.current('Произошла ошибка при регистрации', 'error')\r\n        }\r\n    }, [loadingStatus])\r\n\r\n    return (\r\n        <ModalBlock\r\n                     title=\"Зарегистрироваться\"\r\n                     onClose={onClose}\r\n                     visible={open}\r\n                     classes={classes}\r\n                    >\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <FormControl className={classes.loginFormControl} component=\"fieldset\" fullWidth>\r\n                            <FormGroup aria-label=\"position\" row>\r\n                            <Controller\r\n                            as={TextField}\r\n                                name=\"email\"\r\n                                control={control}\r\n                                defaultValue=\"\"\r\n                                // render={({ onChange, value }) => <input onChange={onChange} value={value} />}\r\n                                className={classes.registerField}\r\n                                autoFocus\r\n                                error={!!errors.email}\r\n                                helperText={errors.email?.message}\r\n                                id=\"email\"\r\n                                label=\"E-Mail\"\r\n                                type=\"email\"\r\n                                variant=\"filled\"\r\n                                InputLabelProps={{\r\n                                    shrink: true\r\n                                }}\r\n                                fullWidth \r\n                            />\r\n                            <Controller\r\n                            as={TextField}\r\n                                name=\"fullname\"\r\n                                control={control}\r\n                                defaultValue=\"\"\r\n                                //render={({ onChange, value }) => <input onChange={onChange} value={value} />}\r\n                                className={classes.registerField}\r\n                                autoFocus\r\n                                error={!!errors.fullname}\r\n                                helperText={errors.fullname?.message}\r\n                                id=\"fullname\"\r\n                                label=\"Имя\"\r\n                                type=\"fullname\"\r\n                                variant=\"filled\"\r\n                                InputLabelProps={{\r\n                                    shrink: true\r\n                                }}\r\n                                fullWidth \r\n                            />\r\n                            <Controller\r\n                            as={TextField}\r\n                                name=\"username\"\r\n                                control={control}\r\n                                defaultValue=\"\"\r\n                                //render={({ onChange, value }) => <input onChange={onChange} value={value} />}\r\n                                className={classes.registerField}\r\n                                autoFocus\r\n                                error={!!errors.username}\r\n                                helperText={errors.username?.message}\r\n                                id=\"username\"\r\n                                label=\"Логин\"\r\n                                type=\"usernamel\"\r\n                                variant=\"filled\"\r\n                                InputLabelProps={{\r\n                                    shrink: true\r\n                                }}\r\n                                fullWidth \r\n                            />\r\n                            <Controller\r\n                                as={TextField}\r\n                                control={control}\r\n                                error={!!errors.password}\r\n                                helperText={errors.password?.message}\r\n                                defaultValue=\"\"\r\n                                name=\"password\"\r\n                                className={classes.registerField}\r\n                                id=\"password\"\r\n                                label=\"Пароль\"\r\n                                type=\"password\"\r\n                                variant=\"filled\"\r\n                                InputLabelProps={{\r\n                                    shrink: true\r\n                                }}\r\n                                fullWidth \r\n                            />\r\n                            <Controller\r\n                                as={TextField}\r\n                                control={control}\r\n                                error={!!errors.password2}\r\n                                helperText={errors.password2?.message}\r\n                                defaultValue=\"\"\r\n                                name=\"password2\"\r\n                                className={classes.registerField}\r\n                                id=\"password2\"\r\n                                label=\"Подтвердите пароль\"\r\n                                type=\"password\"\r\n                                variant=\"filled\"\r\n                                InputLabelProps={{\r\n                                    shrink: true\r\n                                }}\r\n                                fullWidth \r\n                            />\r\n                             \r\n                                <Button disabled={loadingStatus === LoadingStatus.LOADING} type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                                    Зарегистрироваться\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </FormControl>\r\n                        </form>\r\n                    </ModalBlock>\r\n    )\r\n}\r\n\r\n","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Signin\\components\\LoginModal.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\components\\AddTweetForm.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\sagas.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\sagas.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\sagas.ts",["240"],"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { TweetsApi } from '../../../services/api/tweetsApi';\nimport { LoadingStatus } from '../../types';\nimport { AddTweet, EditTweet, setAddFormState, setTweets, setTweetsLoadingStatus } from './actionCreators';\nimport { EditTweetActionInterface, FetchAddTweetActionInterface, FetchEditTweetActionInterface, RemoveTweetActionInterface, TweetsActionsType } from './contracts/actionTypes';\nimport { AddFormState } from './contracts/state';\n\nexport function* fetchTweetsRequest() {\n    try {\n        const pathname = window.location.pathname;\n        const userId = pathname.includes('/user') ? pathname.split('/').pop() : undefined;\n        const items = yield call(TweetsApi.fetchTweets, userId);\n        yield put(setTweets(items))\n    } catch (error) {\n        yield put(setTweetsLoadingStatus(LoadingStatus.ERROR));\n    }\n}\n\nexport function* fetchAddTweetRequest({ payload }: FetchAddTweetActionInterface) {\n    try {\n        const item = yield call(TweetsApi.addTweet, payload);\n        yield put(AddTweet(item));\n    } catch (error) {\n        yield put(setAddFormState(AddFormState.ERROR));\n    }\n}\n\nexport function* fetchEditTweetRequest({ payload }: FetchEditTweetActionInterface) {\n    try {\n        const item = yield call(TweetsApi.editTweet, payload);\n        console.log('item', item)\n        yield put(EditTweet(item));\n    } catch (error) {\n        alert('Ошибка при редактировании!')\n        yield put(setAddFormState(AddFormState.ERROR));\n    }\n}\n\nexport function* fetchRemoveTweetRequest({ payload }: RemoveTweetActionInterface) {\n    try {\n        yield call(TweetsApi.removeTweet, payload);\n    } catch (error) {\n        alert('Ошибка при удалении!')\n    }\n}\n   \nexport function* tweetsSaga() {\n    yield takeLatest(TweetsActionsType.FETCH_TWEETS, fetchTweetsRequest);\n    yield takeLatest(TweetsActionsType.FETCH_ADD_TWEET, fetchAddTweetRequest);\n    yield takeLatest(TweetsActionsType.REMOVE_TWEET, fetchRemoveTweetRequest);\n    yield takeLatest(TweetsActionsType.FETCH_EDIT_TWEET, fetchEditTweetRequest);\n}\n","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\HashTags.tsx",["241"],"import { Divider, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHomeStyles } from '../pages/Home/theme';\nimport { selectTagsItems, selectIsTagsLoaded } from '../store/ducks/tags/selectors';\nimport { Link } from 'react-router-dom';\n\n\ninterface TagsProps {\n    classes: ReturnType<typeof useHomeStyles>;\n}\n\nexport const Tags: React.FC<TagsProps> = ({\n    classes\n}: TagsProps): React.ReactElement | null => {\n    const items = useSelector(selectTagsItems);\n    const isLoaded = useSelector(selectIsTagsLoaded);\n\n    if (!isLoaded) {\n        return null;\n    }\n\n    return (\n        <Paper className={classes.rightSideBlock}>\n        <Paper className={classes.rightSideBlockHeader} variant=\"outlined\">\n            <b>Актуальные темы</b>\n        </Paper>\n    <List>\n       {\n           items.map((obj) => {\n           <React.Fragment key={obj._id}>\n            <Link to={`/home/search?q=${obj.name}`}>\n            <ListItem className={classes.rightSideBlockItem}>\n            <ListItemText primary={obj.name}\n            secondary={\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Твитов: {obj.count}\n                </Typography>\n            }\n            />\n        </ListItem>\n        </Link>\n        <Divider component=\"li\" />\n            </React.Fragment>\n        })\n       }\n    </List>\n    </Paper>\n    )\n}\n","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\Sidebar.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\components\\SearchTextField.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\components\\ModalBlock.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\utils\\uploadImage.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\services\\api\\tweetsApi.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\services\\api\\TagsApi.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\components\\UploadImages.tsx",["242","243","244"],"import { IconButton, makeStyles, Theme } from '@material-ui/core';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\n// import ClearIcon from '@material-ui/icons/Clear'\r\nimport React from 'react';\r\nimport { uploadImagesListStyles } from '../pages/Home/theme';\r\nimport { ImageObj } from './AddTweetForm';\r\nimport { ImageList } from './ImageList';\r\n \r\ninterface UploadImageProps {\r\n    images: ImageObj[];\r\n    onChangeImages: (callback: (prev: ImageObj[]) => ImageObj[]) => void;\r\n}\r\n\r\nexport const UploadImages: React.FC<UploadImageProps> = ({ images, onChangeImages }) => {\r\n    const classes = uploadImagesListStyles()\r\n    const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n    const handleClickImage = () => {\r\n        if (inputRef.current) {\r\n            inputRef.current.click()\r\n        }\r\n    };\r\n\r\n    const handleChangeFileInput = React.useCallback((event: Event) => {\r\n        if (event.target) {\r\n            const target = event.target as HTMLInputElement;\r\n             const file = target.files?.[0];\r\n            if (file) {\r\n                 const fileObj = new Blob([file]);\r\n                 onChangeImages(prev => [...prev, {\r\n                     blobUrl: URL.createObjectURL(fileObj),\r\n                     file\r\n                 }])\r\n            }\r\n            console.log('handleChangeFileInput')\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    \r\n    const removeImage = (url: string) => {\r\n        onChangeImages(prev => prev.filter((obj) => obj.blobUrl !== url))\r\n    }\r\n \r\n    React.useEffect(() => {\r\n        if (inputRef.current) {\r\n            inputRef.current.addEventListener('change', handleChangeFileInput)\r\n        }\r\n        return () => {\r\n            if (inputRef.current) {\r\n                inputRef.current.removeEventListener('change', handleChangeFileInput)\r\n            }\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <ImageList images={images.map((obj) => obj.blobUrl)} classes={classes} removeImage={removeImage} />\r\n            <IconButton onClick={handleClickImage} color=\"primary\"> \r\n                <ImageOutlinedIcon style={{ fontSize: 26 }} />\r\n            </IconButton> \r\n            <input ref={inputRef} type='file' id='upload-input' hidden/>\r\n        </div>\r\n    )\r\n}\r\n","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\selectors.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Layout.tsx",["245"],"import React from 'react';\nimport { Container, Grid, InputAdornment } from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/SearchOutlined';\n\nimport { Sidebar } from '../components/Sidebar';\nimport { useHomeStyles } from '../pages/Home/theme';\nimport { SearchTextField } from \"../components/SearchTextField\";\nimport { Tags } from '../components/HashTags';\n// import { Users } from '../components/Users';\n\ninterface Layout {\n  children: React.ReactNode;\n}\n\nexport const Layout: React.FC<Layout> = ({ children }): React.ReactElement => {\n  const classes = useHomeStyles();\n\nreturn (\n  // <Container classname={classes.wrapper} maxWidth='lg'>\n    <Container  maxWidth='lg'>\n    <Grid container spacing={3}>\n      <Grid sm={1} md={3} item>\n        <Sidebar classes={classes} />\n      </Grid>\n      <Grid sm={8} md={6} item>\n        {children}\n      </Grid>\n      <Grid sm={3} md={3} item>\n        <div className={classes.rightSide}>\n          <SearchTextField\n            variant='outlined'\n            placeholder='Поиск по Твиттеру'\n            inputProps={{\n              startAdornment: (\n                <InputAdornment position='start'>\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            fullWidth\n          />\n          <Tags classes={classes} />\n          {/* <Users /> */}\n        </div>\n      </Grid>\n    </Grid>\n  </Container>\n);\n}\n","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\ActivatePage.tsx",["246"],"import React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { AuthApi } from \"../services/api/authApi\";\nimport { setUserLoadingStatus } from \"../store/ducks/user/actionCreators\";\nimport { LoadingStatus } from \"../store/types\";\n\nexport const ActivatePage = () => {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(setUserLoadingStatus(LoadingStatus.NEVER));\n    const hash = window.location.pathname.split('/').pop();\n    if (hash) {\n      AuthApi.verify(hash)\n      .then(({ data }) => {\n      window.localStorage.setItem('token', data.token);\n      window.location.href = '/home';\n    })\n      .catch(() => {\n      dispatch(setUserLoadingStatus(LoadingStatus.LOADED));\n    });\n    }\n  }, []);\n\n  return null;\n}\n","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\User\\index.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\components\\UserSideProfile.tsx",[],{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":14,"column":10,"nodeType":"253","messageId":"254","endLine":14,"endColumn":25},{"ruleId":"251","severity":1,"message":"255","line":15,"column":10,"nodeType":"253","messageId":"254","endLine":15,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":16,"column":10,"nodeType":"253","messageId":"254","endLine":16,"endColumn":25},{"ruleId":"251","severity":1,"message":"256","line":9,"column":38,"nodeType":"253","messageId":"254","endLine":9,"endColumn":48},{"ruleId":"251","severity":1,"message":"257","line":9,"column":91,"nodeType":"253","messageId":"254","endLine":9,"endColumn":96},{"ruleId":"251","severity":1,"message":"258","line":17,"column":10,"nodeType":"253","messageId":"254","endLine":17,"endColumn":19},{"ruleId":"251","severity":1,"message":"259","line":17,"column":50,"nodeType":"253","messageId":"254","endLine":17,"endColumn":65},{"ruleId":"251","severity":1,"message":"260","line":18,"column":10,"nodeType":"253","messageId":"254","endLine":18,"endColumn":22},{"ruleId":"251","severity":1,"message":"261","line":19,"column":10,"nodeType":"253","messageId":"254","endLine":19,"endColumn":22},{"ruleId":"251","severity":1,"message":"262","line":19,"column":24,"nodeType":"253","messageId":"254","endLine":19,"endColumn":32},{"ruleId":"251","severity":1,"message":"263","line":21,"column":10,"nodeType":"253","messageId":"254","endLine":21,"endColumn":26},{"ruleId":"251","severity":1,"message":"264","line":22,"column":10,"nodeType":"253","messageId":"254","endLine":22,"endColumn":22},{"ruleId":"251","severity":1,"message":"265","line":23,"column":10,"nodeType":"253","messageId":"254","endLine":23,"endColumn":21},{"ruleId":"251","severity":1,"message":"266","line":24,"column":10,"nodeType":"253","messageId":"254","endLine":24,"endColumn":22},{"ruleId":"251","severity":1,"message":"267","line":25,"column":8,"nodeType":"253","messageId":"254","endLine":25,"endColumn":13},{"ruleId":"251","severity":1,"message":"268","line":3,"column":10,"nodeType":"253","messageId":"254","endLine":3,"endColumn":23},{"ruleId":"269","severity":1,"message":"270","line":59,"column":8,"nodeType":"271","endLine":59,"endColumn":23,"suggestions":"272"},{"ruleId":"251","severity":1,"message":"273","line":5,"column":10,"nodeType":"253","messageId":"254","endLine":5,"endColumn":34},{"ruleId":"274","severity":1,"message":"275","line":32,"column":28,"nodeType":"276","messageId":"277","endLine":32,"endColumn":30},{"ruleId":"251","severity":1,"message":"256","line":1,"column":22,"nodeType":"253","messageId":"254","endLine":1,"endColumn":32},{"ruleId":"251","severity":1,"message":"257","line":1,"column":34,"nodeType":"253","messageId":"254","endLine":1,"endColumn":39},{"ruleId":"269","severity":1,"message":"278","line":49,"column":26,"nodeType":"253","endLine":49,"endColumn":33},{"ruleId":"279","severity":1,"message":"280","line":15,"column":14,"nodeType":"253","messageId":"281","endLine":15,"endColumn":38},{"ruleId":"269","severity":1,"message":"282","line":23,"column":6,"nodeType":"271","endLine":23,"endColumn":8,"suggestions":"283"},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"@typescript-eslint/no-unused-vars","'UserSideProfile' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'EditTweet' is defined but never used.","'setAddFormState' is defined but never used.","'eventChannel' is defined but never used.","'AddTweetForm' is defined but never used.","'ImageObj' is defined but never used.","'CircularProgress' is defined but never used.","'AddFormState' is defined but never used.","'uploadImage' is defined but never used.","'UploadImages' is defined but never used.","'axios' is defined but never used.","'useHomeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["286"],"'EditTweetActionInterface' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","The ref value 'inputRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'inputRef.current' to a variable inside the effect, and use that variable in the cleanup function.","@typescript-eslint/no-redeclare","'Layout' is already defined.","redeclared","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["287"],"no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [loadingStatus, onClose]",{"range":"292","text":"293"},"Update the dependencies array to be: [dispatch]",{"range":"294","text":"295"},[2405,2420],"[loadingStatus, onClose]",[731,733],"[dispatch]"]