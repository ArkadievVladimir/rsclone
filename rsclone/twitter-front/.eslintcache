[{"D:\\rsclone\\rsclone\\twitter-front\\src\\index.tsx":"1","D:\\rsclone\\rsclone\\twitter-front\\src\\theme.ts":"2","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\store.ts":"3","D:\\rsclone\\rsclone\\twitter-front\\src\\App.tsx":"4","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\RootReducer.ts":"5","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\saga.ts":"6","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\User.tsx":"7","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Home\\Home.tsx":"8","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\sagas.ts":"9","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\reducer.ts":"10","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\sagas.ts":"11","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\actionCreators.ts":"12","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\actionCreators.ts":"13","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Home\\components\\FullTweet.tsx":"14","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\actionCreators.ts":"15","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\contracts\\state.ts":"16","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\contracts\\state.ts":"17","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\contracts\\actionTypes.ts":"18","D:\\rsclone\\rsclone\\twitter-front\\src\\services\\api\\tweetsApi.ts":"19","D:\\rsclone\\rsclone\\twitter-front\\src\\services\\api\\TagsApi.ts":"20","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\contracts\\actionTypes.ts":"21","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\selectors.ts":"22","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Home\\theme.tsx":"23","D:\\rsclone\\rsclone\\twitter-front\\src\\core\\axios.ts":"24","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\selectors.ts":"25","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\sagas.ts":"26","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\reducer.ts":"27","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\reducer.ts":"28","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\BackButton.tsx":"29","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\HashTags.tsx":"30","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\AddTweetForm.tsx":"31","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\SearchTextField.tsx":"32","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\Sidebar.tsx":"33","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\Tweet.tsx":"34","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\ModalBlock.tsx":"35","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\contracts\\state.ts":"36","D:\\rsclone\\rsclone\\twitter-front\\src\\utils\\formatDate.ts":"37","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\selectors.ts":"38","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Signin\\index.tsx":"39","D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Signin\\components\\LoginModal.tsx":"40","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\Notification.tsx":"41","D:\\rsclone\\rsclone\\twitter-front\\src\\services\\api\\authApi.tsx":"42","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\types.ts":"43","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\selectors.ts":"44","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\actionCreators.ts":"45","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\contracts\\actionTypes.ts":"46","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\reducer.ts":"47","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\sagas.ts":"48"},{"size":575,"mtime":1610443888243,"results":"49","hashOfConfig":"50"},{"size":2816,"mtime":1610443888251,"results":"51","hashOfConfig":"50"},{"size":1006,"mtime":1610463831945,"results":"52","hashOfConfig":"50"},{"size":559,"mtime":1610443888240,"results":"53","hashOfConfig":"50"},{"size":430,"mtime":1610469175850,"results":"54","hashOfConfig":"50"},{"size":357,"mtime":1610469445327,"results":"55","hashOfConfig":"50"},{"size":709,"mtime":1610443888246,"results":"56","hashOfConfig":"50"},{"size":5834,"mtime":1610447535797,"results":"57","hashOfConfig":"50"},{"size":807,"mtime":1610466048516,"results":"58","hashOfConfig":"50"},{"size":941,"mtime":1610467704582,"results":"59","hashOfConfig":"50"},{"size":607,"mtime":1610467721420,"results":"60","hashOfConfig":"50"},{"size":1288,"mtime":1610467968088,"results":"61","hashOfConfig":"50"},{"size":1191,"mtime":1610469295330,"results":"62","hashOfConfig":"50"},{"size":3303,"mtime":1610443888245,"results":"63","hashOfConfig":"50"},{"size":942,"mtime":1610462753535,"results":"64","hashOfConfig":"50"},{"size":386,"mtime":1610467450609,"results":"65","hashOfConfig":"50"},{"size":214,"mtime":1610464279700,"results":"66","hashOfConfig":"50"},{"size":774,"mtime":1610462753283,"results":"67","hashOfConfig":"50"},{"size":687,"mtime":1610443888247,"results":"68","hashOfConfig":"50"},{"size":242,"mtime":1610443888247,"results":"69","hashOfConfig":"50"},{"size":1540,"mtime":1610469317338,"results":"70","hashOfConfig":"50"},{"size":714,"mtime":1610466071848,"results":"71","hashOfConfig":"50"},{"size":4873,"mtime":1610443888246,"results":"72","hashOfConfig":"50"},{"size":179,"mtime":1610443888243,"results":"73","hashOfConfig":"50"},{"size":802,"mtime":1610467518488,"results":"74","hashOfConfig":"50"},{"size":1115,"mtime":1610467586837,"results":"75","hashOfConfig":"50"},{"size":1442,"mtime":1610467600870,"results":"76","hashOfConfig":"50"},{"size":1018,"mtime":1610465925256,"results":"77","hashOfConfig":"50"},{"size":547,"mtime":1610443888242,"results":"78","hashOfConfig":"50"},{"size":1619,"mtime":1610443888242,"results":"79","hashOfConfig":"50"},{"size":3902,"mtime":1610447732044,"results":"80","hashOfConfig":"50"},{"size":940,"mtime":1610443888242,"results":"81","hashOfConfig":"50"},{"size":4575,"mtime":1610443888243,"results":"82","hashOfConfig":"50"},{"size":4558,"mtime":1610443888243,"results":"83","hashOfConfig":"50"},{"size":1278,"mtime":1610443888242,"results":"84","hashOfConfig":"50"},{"size":480,"mtime":1610467451630,"results":"85","hashOfConfig":"50"},{"size":230,"mtime":1610443888251,"results":"86","hashOfConfig":"50"},{"size":697,"mtime":1610467731394,"results":"87","hashOfConfig":"50"},{"size":7649,"mtime":1610452671633,"results":"88","hashOfConfig":"50"},{"size":5320,"mtime":1610469026307,"results":"89","hashOfConfig":"50"},{"size":3686,"mtime":1610460754510,"results":"90","hashOfConfig":"50"},{"size":431,"mtime":1610460974671,"results":"91","hashOfConfig":"50"},{"size":149,"mtime":1610467173270,"results":"92","hashOfConfig":"50"},{"size":378,"mtime":1610465045879,"results":"93","hashOfConfig":"50"},{"size":850,"mtime":1610466842102,"results":"94","hashOfConfig":"50"},{"size":826,"mtime":1610467871809,"results":"95","hashOfConfig":"50"},{"size":826,"mtime":1610469162329,"results":"96","hashOfConfig":"50"},{"size":772,"mtime":1610469876404,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"qiikh",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"100"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\rsclone\\rsclone\\twitter-front\\src\\index.tsx",[],["211","212"],"D:\\rsclone\\rsclone\\twitter-front\\src\\theme.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\store.ts",["213"],"import React from 'react';\nimport { compose, createStore } from 'redux';\nimport { rootReducer } from './RootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware } from 'redux';\nimport rootSaga from './saga';\nimport { TweetsState } from './ducks/tweets/contracts/state';\nimport { TagsState } from './ducks/tags/contracts/state';\nimport { TweetState } from './ducks/tweet/contracts/state';\nimport { UserState } from './ducks/user/contracts/state';\n\ndeclare global {\n    interface Window {\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?: typeof compose;\n    }\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport interface RootState {\n    tweets: TweetsState;\n    tags: TagsState;\n    tweet: TweetState;\n    user: UserState;\n}\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(rootSaga);\n","D:\\rsclone\\rsclone\\twitter-front\\src\\App.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\RootReducer.ts",["214"],"import React from 'react';\nimport { combineReducers } from 'redux';\nimport { tweetReducer } from './ducks/tweet/reducer';\nimport { tweetsReducer } from './ducks/tweets/reducer';\nimport { TagsReducer } from './ducks/tags/reducer';\nimport { userReducer } from './ducks/user/reducer';\n\n\nexport const rootReducer = combineReducers({\n    tweets: tweetsReducer,\n    tags: TagsReducer,\n    tweet: tweetReducer,\n    user: userReducer\n});\n","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\saga.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\User.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Home\\Home.tsx",["215"],"import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { Tweet } from '../../components/Tweet';\nimport { \n    Grid, \n    InputAdornment,\n    Paper,\n    Typography,\n    Container,\n    ListItem,\n    Divider,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    List,\n    Button,\n    IconButton,\n    } from '@material-ui/core';\nimport { Sidebar } from '../../components/Sidebar';\nimport SearchIcon from '@material-ui/icons/SearchOutlined';\nimport PersonAddIcon from '@material-ui/icons/PersonAddOutlined';\nimport { AddTweetForm } from '../../components/AddTweetForm';\nimport { useHomeStyles } from './theme';\nimport { SearchTextField } from '../../components/SearchTextField';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsTweetsLoading, selectTweetsItems } from '../../store/ducks/tweets/selectors';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Tags } from '../../components/HashTags';\nimport { BackButton } from '../../components/BackButton';\nimport { FullTweet } from './components/FullTweet';\nimport { fetchTweets } from '../../store/ducks/tweets/actionCreators';\nimport { fetchTags } from '../../store/ducks/tags/actionCreators';\n\n\nexport const Home = (): React.ReactElement => {\n    const classes = useHomeStyles();\n    const dispatch = useDispatch();\n    const tweets = useSelector(selectTweetsItems);\n    const isLoading = useSelector(selectIsTweetsLoading);\n\n    useEffect(() => {\n        dispatch(fetchTweets());\n        dispatch(fetchTags());\n    }, [dispatch])\n\n    return (\n        <Container maxWidth=\"lg\" className={classes.wrapper}>\n            <Grid container spacing={3}>\n            <Grid item sm={1} md={3}>\n               <Sidebar classes={classes} />\n            </Grid>\n            <Grid item sm={8} md={6}>\n                <Paper \n                    className={classes.tweetsWrapper}\n                    variant=\"outlined\">\n                <Paper \n                className={classes.tweetsHeader}\n                variant=\"outlined\" >\n                <Route path='/home/:any'>\n                    <BackButton />\n                </Route>\n                <Route path={['/home', '/home/search']} exact>\n                    <Typography variant=\"h6\">\n                        Твиты\n                    </Typography>  \n                </Route>\n                <Route path='/home/tweet' >\n                    <Typography variant=\"h6\">\n                        Твитнуть\n                    </Typography>  \n                </Route> \n                </Paper>\n                <Route path={['/home', '/home/search']} exact >\n                <Paper>\n                    <div className={classes.addForm}>\n                        <AddTweetForm classes={classes} rowsMax={2}/>\n                    </div>\n                    <div className={classes.addFormBottomLine}></div>\n                </Paper>\n                </Route>\n                <Route path=\"/home\" exact>\n                    {isLoading ? (\n                        <div className={classes.tweetsWrapper}>\n                            <CircularProgress />\n                        </div>\n                    ) : (\n                        tweets.map((tweet) => \n                        <Tweet\n                        key={tweet._id}\n                        classes={classes}\n                        {...tweet}\n                        />)\n                    )}\n                </Route>\n                <Route path=\"/home/tweet/:id\" component={FullTweet} exact />\n                </Paper>\n            </Grid>\n            <Grid item sm={3} md={3}>\n                <div className={classes.rightSide}>\n                    <SearchTextField\n                        fullWidth\n                        placeholder=\"Поиск по Твиттеру\"\n                        inputProps={{\n                            startadorment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                    <Tags classes={classes} />\n                    <Paper className={classes.rightSideBlock}>\n                        <Paper className={classes.rightSideBlockHeader} variant=\"outlined\">\n                            <b>Кого читать</b>\n                        </Paper>\n                        <List>\n                            <ListItem className={classes.rightSideBlockItem}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                    alt=\"Vitaly Zabavsky\"\n                                    src=\"https://images.unsplash.com/photo-1581803118522-7b72a50f7e9f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80\"\n                                    />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary=\"Dock of Shame\"\n                                    secondary={\n                                        <Typography component=\"span\" variant=\"body2\">\n                                            @FavDocOfShame\n                                        </Typography>\n                                    }\n                                />\n                                <Button color=\"primary\">\n                                    <PersonAddIcon />\n                                </Button>    \n                            </ListItem>\n                            <Divider component=\"li\" />\n                        </List>\n                    </Paper>\n                </div>\n            </Grid>\n            </Grid>\n        </Container>\n    );\n};\n","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\sagas.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\reducer.ts",["216"],"import React from 'react';\nimport produce from 'immer';\nimport { Draft } from 'immer';\nimport { LoadingState, TagsState } from './contracts/state';\nimport { TagsActions, TagsActionsType } from './actionCreators';\n\nconst initialTagsState: TagsState = {\n    items: [],\n    loadingState: LoadingState.NEVER\n}\n\nexport const TagsReducer = produce((draft: Draft<TagsState>, action: TagsActions) => {\n    switch (action.type) {\n        case TagsActionsType.SET_TAGS:\n            draft.items = action.payload;\n            draft.loadingState = LoadingState.LOADED;\n            break;\n\n        case TagsActionsType.FETCH_TAGS:\n            draft.items = [];\n            draft.loadingState = LoadingState.LOADING;\n            break;\n\n        case TagsActionsType.SET_LOADING_STATE:\n            draft.loadingState = action.payload;\n            break;\n\n        default:\n            break;\n    }\n}, initialTagsState);\n","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\sagas.ts",["217"],"import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LoadingState } from './contracts/state';\nimport { setTags, setTagsLoadingState, TagsActionsType } from './actionCreators';\nimport { TagsApi } from '../../../services/api/TagsApi';\n\n \nexport function* fetchTagsRequest() {\n    try {\n        const items = yield call(TagsApi.fetchTags);\n        yield put(setTags(items))\n    } catch (error) {\n        yield put(setTagsLoadingState(LoadingState.ERROR));\n    }\n}\n   \n\nexport function* tagsSaga() {\n    yield takeLatest(TagsActionsType.FETCH_TAGS, fetchTagsRequest);\n}\n","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\actionCreators.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\actionCreators.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Home\\components\\FullTweet.tsx",["218","219","220","221"],"import { Paper, Avatar, Typography, IconButton } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport RepeatOutlinedIcon from '@material-ui/icons/RepeatOutlined';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport ReplyOutlinedIcon from '@material-ui/icons/ReplyOutlined';\nimport classNames from 'classnames';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport format from 'date-fns/format';\nimport ruLang from 'date-fns/locale/ru';\nimport { fetchTweetData, setTweetData } from '../../../store/ducks/tweet/actionCreators';\nimport { selectIsTweetLoading, selectTweetData } from '../../../store/ducks/tweet/selectors';\nimport { useHomeStyles } from '../theme';\nimport { Tweet } from '../../../components/Tweet';\n\n\nexport const FullTweet: React.FC = (): React.ReactElement | null => {\n    const classes = useHomeStyles();\n    const dispatch = useDispatch();\n    const tweetData = useSelector(selectTweetData);\n    const isLoading = useSelector(selectIsTweetLoading);\n    const params: { id?: string } = useParams();\n    const id = params.id;\n\n    useEffect(() => {\n        if (id) {\n           dispatch(fetchTweetData(id)); \n        }   \n\n        return () => {\n            dispatch(setTweetData(undefined));\n        }\n    }, [dispatch, id]);\n\n    if (isLoading) {\n        return (\n        <div className={classes.tweetsCentered} >\n            <CircularProgress />\n        </div>\n        ); \n    }\n\n    if (tweetData) {\n        return  <Paper className={classes.fullTweet}>                   \n                <div className={classNames(classes.tweetsHeaderUser)}>\n                    <Avatar \n                        alt=\"Ava\" \n                        className={classes.tweetAvatar}\n                        src={tweetData.user.avatarUrl} \n                    />\n                    <Typography>\n                        <b>{tweetData.user.fullname}</b>&nbsp;                     \n                        <div>\n                            <span className={classes.tweetsUserName}>@{tweetData.user.username}</span>&nbsp;\n                        </div>\n                    </Typography>\n                </div> \n                <Typography variant=\"body1\" gutterBottom className={classes.fullTweetText}>\n                        {tweetData.text}\n                </Typography>\n                <Typography>\n                    <span className={classes.tweetsUserName}>{format(new Date(tweetData.createdAt),'H:mm', {locale: ruLang})} · </span>\n                    <span className={classes.tweetsUserName}>{format(new Date(tweetData.createdAt), 'dd MMM yyyy', {locale: ruLang})}</span>\n                </Typography>\n                {/* <div className={classNames(classes.tweetFooter, classes.fullTweetFooter)}> */}\n                <div className={classNames(classes.tweetFooter)}>\n                    <IconButton color=\"primary\">\n                        <ChatBubbleOutlineOutlinedIcon style={{fontSize: 16}} />\n                    </IconButton>\n                </div>\n            </Paper>\n    }\n    \n    return null;\n};\n","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\actionCreators.ts",["222","223"],"import React from 'react';\nimport { FetchTweetDataActionInterface, SetTweetDataActionInterface, SetTweetLoadingStatusActionInterface, TweetActionsType } from './contracts/actionTypes';\nimport { TweetState } from './contracts/state';\nimport { Tweet } from '../tweets/contracts/state';\nimport { LoadingStatus } from '../../types';\n\n\nexport const setTweetData = (payload: TweetState['data']): SetTweetDataActionInterface => ({\n    type: TweetActionsType.SET_TWEET_DATA,\n    payload,\n});\n\nexport const setTweetLoadingStatus = (\n    payload: LoadingStatus,\n    ): SetTweetLoadingStatusActionInterface => ({\n    type: TweetActionsType.SET_LOADING_STATE,\n    payload,\n});\n\nexport const fetchTweetData = (payload: string): FetchTweetDataActionInterface => ({\n    type: TweetActionsType.FETCH_TWEET_DATA,\n    payload\n});\n\nexport type TweetActions = | SetTweetDataActionInterface | SetTweetLoadingStatusActionInterface | FetchTweetDataActionInterface;\n","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\contracts\\state.ts",["224"],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\contracts\\state.ts",["225"],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\contracts\\actionTypes.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\services\\api\\tweetsApi.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\services\\api\\TagsApi.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\contracts\\actionTypes.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\selectors.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Home\\theme.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\core\\axios.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\selectors.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\sagas.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\reducer.ts",["226"],"import React from 'react';\nimport produce from 'immer';\nimport { Draft } from 'immer';\nimport { AddFormState, LoadingState, TweetsState } from './contracts/state';\nimport { TweetsActions, TweetsActionsType } from './contracts/actionTypes';\n\nconst initialTweetsState: TweetsState = {\n    items: [],\n    addFormState: AddFormState.NEVER,\n    loadingState: LoadingState.NEVER\n}\n\nexport const tweetsReducer = produce((draft: Draft<TweetsState>, action: TweetsActions) => {\n    switch (action.type) {\n\n        case TweetsActionsType.FETCH_TWEETS:\n            draft.items = [];\n            draft.loadingState = LoadingState.LOADING;\n            break;\n\n        case TweetsActionsType.SET_TWEETS:\n            draft.items = action.payload;\n            draft.loadingState = LoadingState.LOADED;\n            break;\n\n\n        case TweetsActionsType.FETCH_ADD_TWEET:\n            draft.addFormState = AddFormState.LOADING;\n            break;\n\n        case TweetsActionsType.SET_ADD_FORM_STATE:\n            draft.addFormState = action.payload;\n            break;\n\n        case TweetsActionsType.ADD_TWEET:\n            draft.items.splice(0, 0, action.payload);\n            draft.addFormState = AddFormState.NEVER;\n            break;\n\n        case TweetsActionsType.SET_LOADING_STATE:\n            draft.loadingState = action.payload;\n            break;\n\n        default:\n            break;\n    }\n}, initialTweetsState);\n","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweet\\reducer.ts",["227"],"import React from 'react';\nimport produce from 'immer';\nimport { Draft } from 'immer';\nimport { LoadingStatus } from '../../types'\nimport {  TweetState } from './contracts/state';\nimport { TweetActions } from './actionCreators';\nimport { TweetActionsType } from './contracts/actionTypes';\n\nconst initialTweetState: TweetState = {\n    data: undefined,\n    LoadingStatus: LoadingStatus.NEVER\n}\n\nexport const tweetReducer = produce((draft: Draft<TweetState>, action: TweetActions) => {\n    switch (action.type) {\n        case TweetActionsType.SET_TWEET_DATA:\n            draft.data = action.payload;\n            draft.LoadingStatus = LoadingStatus.LOADED;\n            break;\n\n        case TweetActionsType.FETCH_TWEET_DATA:\n            draft.data = undefined;\n            draft.LoadingStatus = LoadingStatus.LOADING;\n            break;\n\n        case TweetActionsType.SET_LOADING_STATE:\n            draft.LoadingStatus = action.payload;\n            break;\n\n        default:\n            break;\n    }\n}, initialTweetState);\n","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\BackButton.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\components\\HashTags.tsx",["228","229","230"],"import { Divider, Link, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHomeStyles } from '../pages/Home/theme';\nimport { TagsState } from '../store/ducks/tags/contracts/state';\nimport { selectTagsItems, selectIsTagsLoaded } from '../store/ducks/tags/selectors';\n\n\ninterface TagsProps {\n    classes: ReturnType<typeof useHomeStyles>;\n}\n\nexport const Tags: React.FC<TagsProps> = ({\n    classes\n}: TagsProps): React.ReactElement | null => {\n    const items = useSelector(selectTagsItems);\n    const isLoaded = useSelector(selectIsTagsLoaded);\n\n    if (!isLoaded) {\n        return null;\n    }\n\n    return (\n        <Paper className={classes.rightSideBlock}>\n        <Paper className={classes.rightSideBlockHeader} variant=\"outlined\">\n            <b>Актуальные темы</b>\n        </Paper>\n    <List>\n       {\n           items.map((obj) => {\n           <React.Fragment key={obj._id}>\n            {/* <Link to={`/home/search?q=${obj.name}`}> */}\n            <ListItem className={classes.rightSideBlockItem}>\n            <ListItemText primary={obj.name}\n            secondary={\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Твитов: {obj.count}\n                </Typography>\n            }\n            />\n        </ListItem>\n        {/* </Link> */}\n        <Divider component=\"li\" />\n            </React.Fragment>\n        })\n       }\n    </List>\n    </Paper>\n    )\n}\n","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\AddTweetForm.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\components\\SearchTextField.tsx",["231"],"import React from 'react';\nimport { TextField, Theme, withStyles } from '@material-ui/core';\n\n\nexport const SearchTextField = withStyles((theme: Theme) => ({\n    root: {\n        '& .MuiOutlinedInput-root': {\n            backgroundColor: '#e6ecf0',\n            borderRadius: 30,\n            padding: 0,\n            paddinfLeft: 15,\n            '& .Mui-focused': {\n                backgroundColor: '#fff',\n                '& fieldset': {\n                    borderWidth: 1,\n                    borderColor: theme.palette.primary.main\n                },\n                '& svg path': {\n                    fill: theme.palette.primary.main\n                }\n            },\n        '&:hover': {\n            '& fieldset': {\n                borderColor: 'transparent',\n                borderWidth: 1\n            }\n        },\n        '& .MuiOutlinedInput-input': {\n            padding: '10px 15px 15px 5px'\n        }\n        }\n    }\n}))(TextField)\n","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\Sidebar.tsx",["232"],"import React from 'react';\nimport { useState } from 'react';\nimport { \n    Button,\n    IconButton,\n    Hidden,\n    Typography,\n    Link,\n    } from '@material-ui/core';\nimport { useHomeStyles } from '../pages/Home/theme';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\nimport CreateIcon from '@material-ui/icons/Create';\nimport { ModalBlock } from './ModalBlock';\nimport { AddTweetForm } from './AddTweetForm';\n\n\ninterface SidebarProps {\n    classes: ReturnType<typeof useHomeStyles>;\n}\n\nexport const Sidebar: React.FC<SidebarProps> = ({classes}): React.ReactElement => {\n    const [tweet, setTweet] = useState<boolean>(false);\n\n    const handlerAddTweet = () => {\n        setTweet(false);\n    };\n\n    const handlerOnClickOpenSetTweet = () => {\n        setTweet(true);\n    };\n    \n    return (\n    <ul className={classes.sideMenuList}> \n        <li className={classes.sideMenuListItem}>\n            {/* <Link to=\"/home\"> */}\n            <IconButton className={classes.logo} aria-label=\"\" color=\"primary\">\n                <TwitterIcon  className={classes.logoIcon}/>\n            </IconButton>\n            {/* </Link> */}\n        </li>\n        <li className={classes.sideMenuListItem}>\n            <div>\n                <SearchIcon  className={classes.sideMenuListItemIcon}/>\n                <Hidden smDown>\n                    <Typography className={classes.sideMenuListItemLabel} variant=\"h6\">\n                        Поиск\n                    </Typography>\n                </Hidden>\n            </div>        \n        </li>\n        <li className={classes.sideMenuListItem}>\n            <div>\n                <NotificationsNoneIcon  className={classes.sideMenuListItemIcon}/>\n                <Hidden smDown>\n                    <Typography className={classes.sideMenuListItemLabel} variant=\"h6\">\n                        Уведомления\n                    </Typography>\n                </Hidden>\n            </div>\n        </li>\n        <li className={classes.sideMenuListItem}>\n            <div>\n                <MailOutlineIcon  className={classes.sideMenuListItemIcon}/>\n                <Hidden smDown>\n                    <Typography className={classes.sideMenuListItemLabel} variant=\"h6\">\n                        Сообщения\n                    </Typography>\n                </Hidden>\n            </div>\n        </li>\n        <li className={classes.sideMenuListItem}>\n            <div>\n                <BookmarkBorderIcon  className={classes.sideMenuListItemIcon}/>\n                <Hidden smDown>\n                    <Typography className={classes.sideMenuListItemLabel} variant=\"h6\">\n                        Закладки\n                    </Typography>\n                </Hidden>\n            </div>\n        </li>\n        <li className={classes.sideMenuListItem}>\n            <div>\n                <ListAltIcon  className={classes.sideMenuListItemIcon}/>\n                <Hidden smDown>\n                    <Typography className={classes.sideMenuListItemLabel} variant=\"h6\">\n                        Список\n                    </Typography>\n                </Hidden>\n            </div>\n        </li>\n        <li className={classes.sideMenuListItem}>\n            <div>\n                <PermIdentityOutlinedIcon  className={classes.sideMenuListItemIcon}/>\n                <Hidden smDown>\n                    <Typography className={classes.sideMenuListItemLabel} variant=\"h6\">\n                        Профиль\n                    </Typography>\n                </Hidden>\n            </div>\n        </li>\n        <li className={classes.sideMenuListItem}>\n            <Button onClick={handlerOnClickOpenSetTweet} className={classes.sideMenuTweetBtn} variant=\"contained\" color=\"primary\" fullWidth>\n                <Hidden smDown>Твитнуть</Hidden> \n                <Hidden mdUp>\n                    <CreateIcon />\n                </Hidden>\n            </Button>\n            <ModalBlock title='' visible={tweet} onClose={handlerAddTweet}>\n                <div style={{width: 500}}>\n                    <AddTweetForm classes={classes} rowsMax={5} />\n                </div>\n            </ModalBlock>\n        </li>\n    </ul>         \n    )\n}","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\Tweet.tsx",["233","234"],"import React from 'react';\nimport classNames from 'classnames';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport RepeatOutlinedIcon from '@material-ui/icons/RepeatOutlined';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport ReplyOutlinedIcon from '@material-ui/icons/ReplyOutlined';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport { Avatar, IconButton, Menu, MenuItem, Paper, Typography, } from '@material-ui/core';\nimport { useHomeStyles } from '../pages/Home/theme';\nimport { Link, useHistory } from 'react-router-dom';\nimport { formatDate } from '../utils/formatDate';\n\n\ninterface TweetProps {\n    _id: string;\n    text: string;\n    classes: ReturnType<typeof useHomeStyles>;\n    createdAt: string;\n    user: {\n        fullname: string;\n        username: string;\n        avatarUrl: string;\n    };\n}\n\nexport const Tweet: React.FC<TweetProps> = ({ \n    _id, \n    text, \n    user, \n    classes,\n    createdAt,\n}: TweetProps): React.ReactElement => {\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const history = useHistory();\n\n    const handleClickTweet = (event: React.MouseEvent<HTMLAnchorElement>): void => {\n        // event.preventDefault();\n        // history.push(`/home/tweet/${_id}`);\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        event.stopPropagation();\n        event.preventDefault();\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <a onClick={handleClickTweet} className={classes.tweetWrapper} href={`/home/tweet/${_id}`}>\n        <Paper className={classNames(classes.tweet, classes.tweetsHeader)} variant=\"outlined\" >\n             <Avatar \n                alt=\"Ava\"\n                className={classes.tweetAvatar}\n                src={user.avatarUrl} />\n        <div className={classes.tweeetContent}>\n            <Typography className={classes.tweetHeader}>\n                <div>\n                    <b>{user.fullname}</b>&nbsp;\n                    <span className={classes.tweetsUserName}>@{user.username}</span>&nbsp;\n                    <span className={classes.tweetsUserName}> · </span>&nbsp;\n                    <span className={classes.tweetsUserName}>{formatDate(new Date(createdAt))}</span>\n                </div>\n                <div>\n                    <IconButton\n                        aria-label=\"more\"\n                        aria-controls=\"long-menu\"\n                        aria-haspopup=\"true\"\n                        onClick={handleClick}\n                    >\n                        <MoreVertIcon />\n                    </IconButton>\n                    <Menu\n                        id=\"long-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={open}\n                        onClose={handleClose}\n \n                    >\n                        <MenuItem onClick={handleClose}>\n                           Редактировать\n                        </MenuItem>\n                        <MenuItem onClick={handleClose}>\n                           Удалить твит\n                        </MenuItem>\n                    </Menu>\n                </div>\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n                {text}\n            </Typography>\n            <div className={classes.tweetFooter}>\n                <div>\n                    <IconButton color=\"primary\">\n                        <ChatBubbleOutlineOutlinedIcon style={{fontSize: 16}} />\n                    </IconButton>\n                    <span style={{fontSize: 14}}>1</span>\n                </div>\n                <div>\n                    <IconButton color=\"primary\">\n                        <RepeatOutlinedIcon style={{fontSize: 16}} />\n                    </IconButton>\n\n                </div>\n                <div>\n                    <IconButton color=\"primary\">\n                        <FavoriteBorderOutlinedIcon style={{fontSize: 16}} /> \n                    </IconButton>                                  \n                </div>\n                <div>\n                    <IconButton color=\"primary\">\n                        <ReplyOutlinedIcon style={{fontSize: 16}}/> \n                    </IconButton>                                   \n                </div>\n            </div> \n        </div> \n    </Paper>\n    </a>\n    );\n};\n","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\ModalBlock.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tweets\\contracts\\state.ts",["235"],"import React from 'react';\nimport { LoadingStatus } from '../../../types';\n\n\n\nexport enum AddFormState {\n    LOADING = \"LOADING\",\n    ERROR = \"ERROR\",\n    NEVER = \"NEVER\"\n}\n\n\nexport interface Tweet {\n    _id: string;\n    text: string;\n    createdAt: string;\n    user: {\n        fullname: string;\n        username: string;\n        avatarUrl: string;\n    }   \n}\n\nexport interface TweetsState {\n    items: Tweet[];\n    LoadingStatus: LoadingStatus;\n    addFormState: AddFormState;\n}\n","D:\\rsclone\\rsclone\\twitter-front\\src\\utils\\formatDate.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\tags\\selectors.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Signin\\index.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\pages\\Signin\\components\\LoginModal.tsx",["236"],"import Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport { useStylesSignIn } from '..';\r\nimport { ModalBlock } from '../../../components/ModalBlock';\r\nimport { AuthApi } from '../../../services/api/authApi';\r\nimport { Notification } from '../../../components/Notification'\r\nimport { Color } from '@material-ui/lab';\r\nimport { fetchSignIn } from '../../../store/ducks/user/actionCreators';\r\nimport { selectUserStatus } from '../../../store/ducks/user/selectors';\r\nimport { LoadingStatus } from '../../../store/types';\r\n\r\n\r\ninterface LoginModalProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\nexport interface LoginFormProps {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nconst LoginFormSchema = yup.object().shape({\r\n    email: yup.string().email(\"Неверно введена почта\").required(\"Введите почту\"),\r\n    password: yup.string().min(6, \"Минимальная длина пароля 6 символов\").required(\"Введите пароль\"),\r\n  });\r\n\r\n\r\nexport const LoginModal: React.FC<LoginModalProps> = ({ open, onClose }): React.ReactElement => {\r\n    const dispatch = useDispatch();\r\n    const loadingStatus = useSelector(selectUserStatus);\r\n    const openNotificationRef = React.useRef<(text: string, type: Color) => void>(() => {});\r\n    const classes = useStylesSignIn();\r\n    const { control, handleSubmit, errors } = useForm<LoginFormProps>({\r\n        resolver: yupResolver(LoginFormSchema)\r\n      });\r\n    const onSubmit = async (data: LoginFormProps) => {\r\n        dispatch(fetchSignIn(data))\r\n\r\n    }\r\n\r\n    React.useEffect( () => {\r\n        if (loadingStatus === LoadingStatus.SUCCESS){\r\n            openNotificationRef.current('Авторизация успешно завершена', 'success')\r\n        } else if (loadingStatus === LoadingStatus.ERROR) {\r\n            openNotificationRef.current('Неверный логин или пароль', 'error')\r\n        }\r\n    }, [loadingStatus])\r\n\r\n      console.log(errors)\r\n    return (\r\n        <Notification>\r\n            {\r\n                callback => {\r\n                    openNotificationRef.current = callback\r\n                    return (\r\n                        <ModalBlock\r\n                     title=\"Войти в аккаунт\"\r\n                     onClose={onClose}\r\n                     visible={open}\r\n                     classes={classes}\r\n                    >\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <FormControl className={classes.loginFormControl} component=\"fieldset\" fullWidth>\r\n                            <FormGroup aria-label=\"position\" row>\r\n                            <Controller\r\n                            as={TextField}\r\n                                name=\"email\"\r\n                                control={control}\r\n                                defaultValue=\"\"\r\n                                //render={({ onChange, value }) => <input onChange={onChange} value={value} />}\r\n                                className={classes.loginSideField}\r\n                                autoFocus\r\n                                error={!!errors.email}\r\n                                helperText={errors.email?.message}\r\n                                id=\"email\"\r\n                                label=\"E-Mail\"\r\n                                type=\"email\"\r\n                                variant=\"filled\"\r\n                                InputLabelProps={{\r\n                                    shrink: true\r\n                                }}\r\n                                fullWidth \r\n                            />\r\n                            <Controller\r\n                                as={TextField}\r\n                                control={control}\r\n                                error={!!errors.password}\r\n                                helperText={errors.password?.message}\r\n                                defaultValue=\"\"\r\n                                name=\"password\"\r\n                                className={classes.loginSideField}\r\n                                id=\"password\"\r\n                                label=\"Пароль\"\r\n                                type=\"password\"\r\n                                variant=\"filled\"\r\n                                InputLabelProps={{\r\n                                    shrink: true\r\n                                }}\r\n                                fullWidth \r\n                            />\r\n                             \r\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                                    Войти\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </FormControl>\r\n                        </form>\r\n                    </ModalBlock>\r\n                    )\r\n                }\r\n            }\r\n        </Notification>\r\n    )\r\n}","D:\\rsclone\\rsclone\\twitter-front\\src\\components\\Notification.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\services\\api\\authApi.tsx",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\types.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\selectors.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\actionCreators.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\contracts\\actionTypes.ts",[],"D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\reducer.ts",["237"],"import React from 'react';\nimport produce from 'immer';\nimport { Draft } from 'immer';\nimport { UserActions } from './actionCreators'\nimport {  UserActionsType } from './contracts/actionTypes';\nimport { LoadingStatus } from '../../types';\nimport { UserState } from './contracts/state';\n\nconst initialUserState: UserState = {\n    data: undefined,\n    status: LoadingStatus.NEVER\n}\n\nexport const userReducer = produce((draft: Draft<UserState>, action: UserActions) => {\n    switch (action.type) {\n\n        case UserActionsType.SET_USER_DATA:\n            draft.data = action.payload;\n            draft.status = LoadingStatus.SUCCESS;\n            break;\n\n        case UserActionsType.SET_LOADING_STATE:\n            draft.status = action.payload;\n            break;\n\n        default:\n            break;\n    }\n}, initialUserState);\n","D:\\rsclone\\rsclone\\twitter-front\\src\\store\\ducks\\user\\sagas.ts",[],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},{"ruleId":"242","severity":1,"message":"243","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},{"ruleId":"242","severity":1,"message":"246","line":18,"column":5,"nodeType":"244","messageId":"245","endLine":18,"endColumn":15},{"ruleId":"242","severity":1,"message":"243","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},{"ruleId":"242","severity":1,"message":"247","line":2,"column":8,"nodeType":"244","messageId":"245","endLine":2,"endColumn":13},{"ruleId":"242","severity":1,"message":"248","line":4,"column":8,"nodeType":"244","messageId":"245","endLine":4,"endColumn":26},{"ruleId":"242","severity":1,"message":"249","line":5,"column":8,"nodeType":"244","messageId":"245","endLine":5,"endColumn":34},{"ruleId":"242","severity":1,"message":"250","line":6,"column":8,"nodeType":"244","messageId":"245","endLine":6,"endColumn":25},{"ruleId":"242","severity":1,"message":"251","line":16,"column":10,"nodeType":"244","messageId":"245","endLine":16,"endColumn":15},{"ruleId":"242","severity":1,"message":"243","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},{"ruleId":"242","severity":1,"message":"251","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":15},{"ruleId":"242","severity":1,"message":"243","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},{"ruleId":"242","severity":1,"message":"243","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},{"ruleId":"242","severity":1,"message":"243","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},{"ruleId":"242","severity":1,"message":"243","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},{"ruleId":"242","severity":1,"message":"252","line":1,"column":19,"nodeType":"244","messageId":"245","endLine":1,"endColumn":23},{"ruleId":"242","severity":1,"message":"253","line":7,"column":10,"nodeType":"244","messageId":"245","endLine":7,"endColumn":19},{"ruleId":"254","severity":1,"message":"255","line":32,"column":28,"nodeType":"256","messageId":"257","endLine":32,"endColumn":30},{"ruleId":"242","severity":1,"message":"243","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},{"ruleId":"242","severity":1,"message":"252","line":8,"column":5,"nodeType":"244","messageId":"245","endLine":8,"endColumn":9},{"ruleId":"242","severity":1,"message":"252","line":11,"column":10,"nodeType":"244","messageId":"245","endLine":11,"endColumn":14},{"ruleId":"242","severity":1,"message":"258","line":37,"column":11,"nodeType":"244","messageId":"245","endLine":37,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},{"ruleId":"242","severity":1,"message":"259","line":12,"column":10,"nodeType":"244","messageId":"245","endLine":12,"endColumn":17},{"ruleId":"242","severity":1,"message":"243","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":13},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'axios' is defined but never used.","'RepeatOutlinedIcon' is defined but never used.","'FavoriteBorderOutlinedIcon' is defined but never used.","'ReplyOutlinedIcon' is defined but never used.","'Tweet' is defined but never used.","'Link' is defined but never used.","'TagsState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'history' is assigned a value but never used.","'AuthApi' is defined but never used.","no-global-assign","no-unsafe-negation"]